# Challenge 1: Square Numbers and Return Their Sum

class Point:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
    def sqSum(self):
        return self.x ** 2 + self.y ** 2 + self.z ** 2
point = Point(1, 3, 5)
result = point.sqSum()
print(result)

#**************************************************************************************************#

# Challenge 2: Implement a Calculator Class

class Calculator:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2
    def add(self):
        return self.num1 + self.num2
    def subtract(self):
        return self.num2 - self.num1
    def multiply(self):
        return self.num1 * self.num2
    def divide(self):
        if self.num1 == 0:
            return "Cannot divide by zero"
        return self.num2 / self.num1
obj = Calculator(10, 94)
addition_result = obj.add()
subtraction_result = obj.subtract()
multiplication_result = obj.multiply()
division_result = obj.divide()
print(addition_result)
print(subtraction_result)
print(multiplication_result)
print(division_result)


#**************************************************************************************************#

# Challenge 3: Implement the Complete Student Class

class Student:
    def __init__(self):
        self.__name = ""
        self.__rollNumber = ""
    def get_name(self):
        return self.__name
    def set_name(self, name):
        self.__name = name
    def get_rollNumber(self):
        return self.__rollNumber
    def set_rollNumber(self, rollNumber):
        self.__rollNumber = rollNumber
student = Student()
student.set_name("Rohit")
student.set_rollNumber("91567")
print(student.get_name())
print(student.get_rollNumber())


#**************************************************************************************************#

# Challenge 4: Implement a Banking Account

class Account:
    def __init__(self, title=None, balance=0):
        self.title = title
        self.balance = balance
class SavingsAccount(Account):
    def __init__(self, title=None, balance=0, interestRate=0):
        super().__init__(title, balance)
        self.interestRate = interestRate
account = Account("Rohit", 100000)
savings_account = SavingsAccount("Rohit", 100000, 5)
print(account.title)
print(account.balance)
print(savings_account.title)
print(savings_account.balance)
print(savings_account.interestRate)


#**************************************************************************************************#

# Challenge 5: Handling a Bank Account

class Account:
    def __init__(self, title, balance):
        self.title = title
        self.balance = balance
    def getBalance(self):
        return self.balance
    def deposit(self, amount):
        self.balance += amount
    def withdrawal(self, amount):
        self.balance -= amount
class SavingsAccount(Account):
    def __init__(self, title, balance, interestRate):
        super().__init__(title, balance)
        self.interestRate = interestRate
    def interestAmount(self):
        return (self.balance * self.interestRate) / 100
account = Account("Rohit", 100000)
account.deposit(50000)
print(account.getBalance())
account.withdrawal(25000)
print(account.getBalance())
savings_account = SavingsAccount("Savings", 125000, 9.15)
interest = savings_account.interestAmount()
print(interest)



